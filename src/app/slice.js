import { createSlice } from '@reduxjs/toolkit'; // Importing the 'createSlice' function from Redux Toolkit to create a slice of state.

export const TransactionSlice = createSlice({
  name: 'transaction', // Defining the name of the slice.
  initialState: { // Defining the initial state for this slice.
    total: 0, // Initializing a 'total' field in the state with the value 0.
    inc: 0, // Initializing an 'inc' field in the state with the value 0.
    exp: 0, // Initializing an 'exp' field in the state with the value 0.
    transactions: [], // Initializing a 'transactions' field in the state as an empty array.
  },
  reducers: {
    addTrans: (state, action) => { // Defining a reducer function 'addTrans' to add a new transaction to the state.
      state.transactions = [action.payload, ...state.transactions]; // Adding the new transaction to the beginning of the 'transactions' array in the state.
    },
    addTotal: (state, action) => { // Defining a reducer function 'addTotal' to increment 'inc' and 'total' fields.
      state.inc += action.payload; // Incrementing the 'inc' field by the payload value.
      state.total += action.payload; // Incrementing the 'total' field by the payload value.
    },
    minusTotal: (state, action) => { // Defining a reducer function 'minusTotal' to decrement 'exp' and 'total' fields.
      state.exp += -action.payload; // Decrementing the 'exp' field by the negative payload value.
      state.total -= -action.payload; // Incrementing the 'total' field by the negative payload value (effectively subtracting it).
    },
    delTrans: state => { 
      //implement later
    },
  },
});

// Action creators are generated for each case reducer function
export const { addTrans, delTrans, addTotal, minusTotal } = TransactionSlice.actions; // Exporting the action creators generated by Redux Toolkit.

export default TransactionSlice.reducer; // Exporting the reducer function generated by Redux Toolkit.
